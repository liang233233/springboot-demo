package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.util.ObjectUtils;
import org.springframework.util.StringUtils;
import java.util.List;
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * $!{table.comment} 前端控制器
 *
 * @Author ${author}
 * @Version 1.0
 * @Date ${date}
 */
#if(${swagger2})
@Api(value = "$!{table.comment}接口API", tags = {"$!{table.comment}接口API"})
#end
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private final static Logger LOGGER = LoggerFactory.getLogger(${table.controllerName}.class);
    ## service name
    #set($ServiceName=${table.serviceName})
    #set($lowerCaseServiceName=$ServiceName.substring(1))
    #set($lowerCaseServiceName=$ServiceName.substring(0,1).toLowerCase()+$lowerCaseServiceName)

    ## entity name
    #set($entityName=${entity})
    #set($lowerCaseEntityName=$entityName.substring(1))
    #set($lowerCaseEntityName=$entityName.substring(0,1).toLowerCase()+$lowerCaseEntityName)


    @Autowired
    private ${table.serviceName} ${lowerCaseServiceName};


    /**
     * 新增一条数据
     *
     * @param ${lowerCaseEntityName}
     * @return RespResult
     */
    #if(${swagger2})
    @ApiOperation(value = "新增", notes = "新增")
    #end
    @PostMapping
    public RespResult<Boolean> add(@RequestBody ${entity} ${lowerCaseEntityName}){
        LOGGER.info("入参为:[{}]", ${lowerCaseEntityName});
        this.${lowerCaseServiceName}.save(${lowerCaseEntityName});
        return RespResult.ok();
    }

    /**
     * 修改一条数据
     *
     * @param ${lowerCaseEntityName}
     * @return RespResult
     */
    #if(${swagger2})
    @ApiOperation(value = "修改", notes = "修改")
    #end
    @PutMapping
    public RespResult<Boolean> update(@RequestBody ${entity} ${lowerCaseEntityName}) {
        LOGGER.info("入参为:[{}]", ${lowerCaseEntityName});
        this.${lowerCaseServiceName}.updateById(${lowerCaseEntityName});
        return RespResult.ok();
    }

    /**
    * 根据ID删除数据
    *
    * @param id
    * @return RespResult
    */
    #if(${swagger2})
    @ApiOperation(value = "根据ID删除数据", notes = "根据ID删除数据")
    #end
    @DeleteMapping("/{id}")
    public RespResult<Boolean> delete(@PathVariable("id") String id)  {
        LOGGER.info("入参为:[{}]", id);
        return RespResult.ok(this.${lowerCaseServiceName}.removeById(id));
    }


    /**
     * 条件查询
     * @param ${lowerCaseEntityName}
     * @return RespResult
     */
    #if(${swagger2})
    @ApiOperation(value = "条件查询", notes = "条件查询")
    #end
    @PostMapping(value = "/search")
    public RespResult<List<${entity}>> queryList(@RequestBody ${entity} ${lowerCaseEntityName}){
        List<${entity}> brands = this.${lowerCaseServiceName}.queryList(${lowerCaseEntityName});
        return RespResult.ok(brands);
    }

    /****
     * 条件查询+分页
     * @param ${lowerCaseEntityName}
     * @return RespResult
     */
    #if(${swagger2})
    @ApiOperation(value = "条件查询+分页", notes = "条件查询+分页")
    #end
    @PostMapping(value = "/search/{page}/{size}")
    public RespResult<Page<${entity}>> queryPageList(
            @PathVariable(value = "page")Long page,
            @PathVariable(value = "size")Long size,
            @RequestBody ${entity} ${lowerCaseEntityName}){
        Page<${entity}> pageInfo = this.${lowerCaseServiceName}.queryPageList(${lowerCaseEntityName},page,size);
        return RespResult.ok(pageInfo);
    }
}

#end